sudo: false
language: generic

# quick hack to determine what tag is (improvements welcomed)
#     release: ^v(\d+|\.)*[^a-z]\d*$
# dev release: ^v(\d+|\.)*[a-z]\d*$

env:
  global:
    - PYENV_VERSION=3.6
    - CHANS_DEV="-c pyviz/label/dev"
    - CHANS_REL="-c pyviz"
    - LABELS_DEV="--label=dev"
    - LABELS_REL="--label=dev --label=main"

stages:
  - pip_test
  - conda_test
  - name: conda_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: pip_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: conda_package
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$
  - name: pip_package
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$

jobs:
  include:

  ########## TEST DEVELOPER INSTALL ##########

  ## pip

  - &pip_default
    stage: pip_test
    # (pyctdev requires itself to test itself)
    before_install: pip install -e .[ecosystem_pip]
    install: pyctdev ecosystem=pip develop_install  # installs test deps
    script:
      - pyctdev ecosystem=pip develop_test --test-group=all
      - pyctdev ecosystem=pip package_build
      - pyctdev ecosystem=pip package_test

  ## conda

  - &conda_default
    stage: conda_test
    env: CHANS=$CHANS_REL
    before_install:
      - pip install -e .   # install local pyctdev
      - pyctdev role=dev miniconda_download   # download miniconda
      - pyctdev role=dev miniconda_install    # install miniconda
      - export PATH="$HOME/miniconda/bin:$PATH"
      - pyctdev ecosystem=conda env_capture
      - conda install -y 'conda ==4.6.4' 'conda-build ==3.17.8' 'anaconda-client ==1.7.2'  # duplicated from setup.py
      - pyctdev ecosystem=conda env_capture
      - pyctdev ecosystem=conda package_build -c pyviz
      - pip uninstall -y doit pyctdev && rm -f .doit.db
      ## install conda package to use for rest of tests
      - conda install -y --use-local pyctdev
    install: pyctdev ecosystem=conda develop_install
    script:
      - pyctdev ecosystem=conda develop_test --test-group=all

  ########## BUILD/TEST/UPLOAD END-USER PACKAGES ##########

  ##### pip

  # (pip ones are deliberately split up...upload 2.7 packages first so
  # that pypi displays 3's metadata; issue at pypa TODO)

  - &pip_pkg_default
    stage: pip_dev_package
    env: PYENV_VERSION=2.7 PYPI=testpypi
    before_install: pip install -e .[ecosystem_pip]
    script:
      - pyctdev ecosystem=pip package_build
      - pyctdev ecosystem=pip package_test --test-group all
      - pyctdev ecosystem=pip package_upload -u $PYPIUSR -p $PYPIPWD --pypi ${PYPI}

  - <<: *pip_pkg_default
    env: PYENV_VERSION=3.6 PYPI=testpypi

  - <<: *pip_pkg_default
    stage: pip_package
    env: PYENV_VERSION=2.7 PYPI=pypi

  - <<: *pip_pkg_default
    stage: pip_package
    env: PYENV_VERSION=3.6 PYPI=pypi


  ##### conda

  - &conda_pkg_default
    stage: conda_dev_package
    env: CHANS=$CHANS_DEV LABELS=$LABELS_DEV
    before_install:
      - pip install -e .   # install local pyctdev
      - pyctdev role=dev miniconda_download   # download miniconda
      - pyctdev role=dev miniconda_install   # install miniconda
      - export PATH="$HOME/miniconda/bin:$PATH"
      - conda install -y 'conda ==4.6.4' 'conda-build ==3.17.8' 'anaconda-client ==1.7.2'  # duplicated from setup.py
    script:
      - pyctdev ecosystem=conda package_build $CHANS
      - pyctdev ecosystem=conda package_test --test-group all
      - pyctdev ecosystem=conda package_upload -u $CONDAUSR -p $CONDAPWD $LABELS

  - <<: *conda_pkg_default
    stage: conda_package
    env: CHANS=$CHANS_REL LABELS=$LABELS_REL
